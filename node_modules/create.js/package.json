{
  "_from": "create.js",
  "_id": "create.js@0.0.16",
  "_inBundle": false,
  "_integrity": "sha1-nZKh8ZhnYeWrMogeKAhpMfg0Hd0=",
  "_location": "/create.js",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "create.js",
    "fetchSpec": "latest",
    "name": "create.js",
    "raw": "create.js",
    "rawSpec": "",
    "registry": true,
    "saveSpec": null,
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/create.js/-/create.js-0.0.16.tgz",
  "_shasum": "9d92a1f1986761e5ab32881e28086931f8341ddd",
  "_spec": "create.js",
  "_where": "C:\\Users\\Sean McGoff\\Documents\\GitHub\\SFG",
  "author": {
    "email": "fergus.ruston@gmail.com",
    "name": "Fergus Ruston"
  },
  "bugs": {
    "url": "https://github.com/ergusto/create.js/issues"
  },
  "bundleDependencies": false,
  "dependencies": {
    "clas": "0.0.5",
    "of": "0.0.11"
  },
  "deprecated": false,
  "description": "declarative dom creation",
  "devDependencies": {},
  "homepage": "https://github.com/ergusto/create.js",
  "license": "ISC",
  "main": "index.js",
  "name": "create.js",
  "optionalDependencies": {},
  "readme": "#create\n\ndeclarative element creation for the browser. no dependencies.\n\n##installation\n\n\tnpm install create.js\n\n##usage\n\n```javascript\nvar create = require('create.js');\ncreate[tagName](options)\n```\n\n###example\n\n```javascript\nvar element = create.div({\n\tclasses: ['class', 'class2'], \n\tid: 'identifier', \n\tcontent: '<div class=\"thing\"></div>'\n});\n```\n\n```html\n<div class=\"class class2\" id=\"identifier\"><div class=\"thing\"></div></div>\n```\n\ncalls to create can be nested\n\n```javascript\nvar element = create.div({\n\tclasses: ['class', 'class2'], \n\tid: 'identifier', \n\tcontent: create.p({content:'hi there'})\n});\n```\n\n```html\n<div class=\"class class2\" id=\"identifier\"><p>hi there</p></div>\n```\n\n###create.list\n\n```javascript\nvar things = [ 'thing1', 'thing2' ];\n```\n\n```javascript\nvar ul = create.ul({\n\tclasses: ['class', 'class2'], \n\tid: 'identifier', \n\tcontent: create.list(things, function() { \n\t\treturn create.li({content:this.current});\n\t}),\n});\n```\n\n```html\n<ul class=\"class class2\" id=\"identifier\">\n\t<li>thing1</li>\n\t<li>thing2</li>\n</ul>\n```\n\ncreate.list takes an iterable and a callback as parameters. the function is called for each item in the iterable, passing the current item as the only parameter. it expects an element to be returned from the function. behind the scenes, a document fragment is created and returned with the result of each function call appended as a child.\n\n---\n\ncontent can also be set as a function.\n\n```javascript\nvar things = [ 'thing1', 'thing2' ];\n```\n\n```javascript\nvar element = create.div({\n\tclasses: ['class', 'class2'], \n\tid: 'identifier',\n\tcontent: function() {\n\t\tvar fragment = create.fragment();\n\t\tvar header = create.h1({content:'Things'});\n\t\tfragment.appendChild(header);\n\t\tthings.forEach(function(thing) { \n\t\t\tvar p = create.p({content:thing});\n\t\t\tfragment.appendChild(p);\n\t\t});\n\t\treturn fragment;\n\t}\n});\n```\n\n```html\n<div class=\"class class2\" id=\"identifier\">\n\t<h1>Things</h1>\n\t<p>thing1</p>\n\t<p>thing2</p>\n</div>\n```\n\n---\n\nor an array.\n\n```html\n<div id=\"thing\"></div>\n```\n\n```javascript\nvar thing = document.querySelector('#thing');\nvar element = create.div({\n\tclasses: ['class', 'class2'], \n\tid: 'identifier', \n\tcontent: [create.p({content:'thing1'}), thing, create.p({content:'thing2'})]\n});\n```\n\n```html\n<div class=\"class class2\" id=\"identifier\">\n\t<p>thing1</p>\n\t<div id=\"thing\"></div>\n\t<p>thing2</p>\n</div>\n```\n\n---\n\ncreate.fragment with no params creates and returns an empty document fragment.\n\npass attributes to options to set on returned element.\n\nclasses property can be a string or list.\n\n---\n\nmore fleshed out example\n\n```javascript\nvar container = create.div({\n\tclasses: 'container',\n\tid: 'container',\n\tcontext: { things: ['thing1', 'thing2']},\n\tcontent: function(context) {\n\t\treturn create.div({\n\t\t\tid: 'inner',\n\t\t\tcontext: context.things,\n\t\t\tcontent: function(context) {\n\t\t\t\tvar fragment = create.fragment();\n\t\t\t\tcontext.forEach(function(thing) {\n\t\t\t\t\tvar child = create.a({\n\t\t\t\t\t\thref: 'http://github.com/ergusto',\n\t\t\t\t\t\tcontent: thing\n\t\t\t\t\t});\n\t\t\t\t\tfragment.appendChild(child);\n\t\t\t\t});\n\t\t\t\treturn fragment;\n\t\t\t}\n\t\t});\n\t},\n});\n```\n\n```html\n<div class=\"container\" id=\"container\">\n\t<div id=\"inner\">\n\t\t<a href=\"http://github.com/ergusto\">thing1</a>\n\t\t<a href=\"http://github.com/ergusto\">thing2</a>\n\t</div>\n</div>\n```",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/ergusto/create.js.git"
  },
  "scripts": {
    "build": "browserify index.js --standalone create > build/create.js",
    "minify": "yuicompressor build/create.js -o build/create.min.js"
  },
  "version": "0.0.16"
}
